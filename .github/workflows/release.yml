# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Release

on:
  push:
    tags: [ "v*" ]

jobs:

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.ACTIONS }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          
  build_release:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: linux-amd64
          - os: macos-latest
            release_suffix: darwin-arm64
          - os: macos-13
            release_suffix: darwin-amd64
          - os: windows-latest
            release_suffix: windows-amd64
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Set Timezone
      uses: szenius/set-timezone@v2.0
      with:
        timezoneLinux: 'Asia/Seoul'
        timezoneMacos: 'Asia/Seoul'
        timezoneWindows: 'Korea Standard Time'
        
    - name: Linux Build
      if: matrix.os == 'ubuntu-latest'
      run: |
         chmod +x ./build_with_flags.sh
         ./build_with_flags.sh -o egovchecker_${{ matrix.release_suffix }}
      shell: bash

    - name: MacOS (arm64) Build
      if: matrix.os == 'macos-latest'
      run: |
         chmod +x ./build_with_flags.sh
         ./build_with_flags.sh -o egovchecker_${{ matrix.release_suffix }}
      shell: bash

    - name: MacOS (amd64) Build
      if: matrix.os == 'macos-13'
      run: |
         chmod +x ./build_with_flags.sh
         ./build_with_flags.sh -o egovchecker_${{ matrix.release_suffix }}
      shell: bash
      
    - name: Windows Build
      if: matrix.os == 'windows-latest'
      run: .\build_with_flags.bat -o egovchecker_${{ matrix.release_suffix }}.exe

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          egovchecker_${{ matrix.release_suffix }}
          egovchecker_${{ matrix.release_suffix }}.exe
          
